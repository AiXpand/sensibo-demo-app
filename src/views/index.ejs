<html lang='en'>
<head>
    <title>Sensibo integration example</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.0.min.js" integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.3.0/chart.min.js" integrity="sha512-mlz/Fs1VtBou2TrUkGzX4VoGvybkD9nkeXWJm3rle0DPHssYYx4j+8kIS15T78ttGfmOjH0lLaBXGcShaVkdkg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</head>
<body>
    <label for='device'>Sensor name:</label>
    <input type='text' name='device' id='device'>
    <label for='apiKey'>Password:</label>
    <input type='text' name='apiKey' id='apiKey'>
    <button name='connect' id='connect'>Connect!</button>

    <div style='width: 800px; height:600px;'>
        <canvas id='chart'></canvas>
    </div>

<!--    <table id='readings' style='padding: 5px'>-->
<!--        <tr><td>Temperature</td><td>Humidity</td><td>Date</td></tr>-->
<!--    </table>-->

    <script>
        // Get the canvas element
        const canvas = document.getElementById('chart');

        function addDataToTable(data) {
            var table = $('#readings');

            // Clear the existing table contents
            table.empty();

            // Add the table header
            var header = '<tr>' +
                '<th>Temperature</th>' +
                '<th>Humidity</th>' +
                '<th>Date</th>' +
                '</tr>';
            table.append(header);

            // Iterate over the data and append rows to the table
            $.each(data, function(index, item) {
                var row = '<tr>' +
                    '<td>' + item.temperature + '</td>' +
                    '<td>' + item.humidity + '</td>' +
                    '<td>' + item.date + '</td>' +
                    '</tr>';
                table.append(row);
            });
        }

        $('#connect').on('click', () => {
            $.post({
                url: '/',
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                data: JSON.stringify({
                    "device": $('#device').val(),
                    "apiKey": $('#apiKey').val(),
                }),
                success: (response) => {
                    console.log(response);

                    // se cer datele si se updateaza tabelul
                    const interval = setInterval(() => {
                        $.get({
                            url: '/readings',
                            contentType: 'application/json; charset=utf-8',
                            dataType: 'json',
                            success: (response) => {
                                addDataToTable(response);
                            },
                        });
                    }, 2000);

                    // renuntam la asta at some point?
                    setTimeout(() => { clearInterval(interval); }, 10000);
                },
            });
        });

        let chart;
        function renderChart() {


            // Make an AJAX request to fetch the dataset
            $.get('/readings', function(jsonData) {
                console.log(jsonData);
                // Extract the temperature and humidity data from the JSON
                const temperatures = jsonData.map(function(item) {
                    return item.temperature;
                });

                const humidities = jsonData.map(function(item) {
                    return item.humidity;
                });

                const timestamps = jsonData.map(function(item) {
                    return item.date;
                });

                console.log(temperatures, humidities, timestamps);

                if (chart) {
                    chart.destroy();
                }

                // Create the chart
                chart = new Chart(canvas, {
                    type: 'line',
                    data: {
                        labels: timestamps,
                        datasets: [
                            {
                                label: 'Temperature',
                                data: temperatures,
                                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1,
                                yAxisID: 'y'
                            },
                            {
                                label: 'Humidity',
                                data: humidities,
                                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1,
                                yAxisID: 'y2'
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                id: 'temperature-axis',
                                type: 'linear',
                                position: 'left'
                            },
                            y2: {
                                id: 'humidity-axis',
                                type: 'linear',
                                position: 'right',
                                grid: {
                                    drawOnChartArea: false
                                }
                            }
                        }
                    }
                });
            })
                .fail(function(error) {
                    console.error('Error fetching the dataset:', error);
                });
        }

        $(function () {
            renderChart();
            setInterval(() => { renderChart(); console.log('running') }, 10000);
        })
    </script>
</body>
</html>